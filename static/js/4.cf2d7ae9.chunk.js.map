{"version":3,"sources":["components/Spinner/Spinner.jsx","components/HowToCook/HowToCook.jsx","components/Snackbar/Snackbar.jsx","components/RecipeDetails/RecipeDetails.jsx","containers/RecipeInfo/RecipeInfo.jsx"],"names":["Spinner","className","withRouter","sourceUrl","recipeName","href","rel","target","Snackbar","text","Provider","value","mapStateToProps","createStructuredSelector","cartItems","selectRecipes","favourites","selectList","connect","dispatch","addRecipe","recipe","removeRecipe","like","likeRecipe","unlike","unlikeRecipe","info","useState","showSnackbar","setShowSnackbar","type","setType","title","publisher","style","backgroundImage","image_url","recipePrice","recipe_id","isLiked","onClick","hasRecipe","Button","click","setTimeout","removeFromCart","addToCart","source_url","RecipeInfo","props","state","recipeInfo","node","createRef","this","current","scrollIntoView","behaviour","id","match","params","recipeId","axios","get","setState","data","ref","Component"],"mappings":"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","file":"static/js/4.cf2d7ae9.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Spinner.scss';\r\n\r\nconst Spinner = () => (\r\n  <div className='spinner'>\r\n    <div className='loader'/>\r\n    <span className='loadtext'>Loading...</span>\r\n  </div>\r\n);\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport './HowToCook.scss';\r\n\r\nconst HowToCook = ({ sourceUrl, recipeName }) => {\r\n  return(\r\n    <div className='howToCook'>\r\n      <div className='titleContainer'>\r\n        <h3>how to cook</h3>\r\n        <p>make recipe from home</p>\r\n      </div>\r\n      <div className='direction'>\r\n        <blockquote>\"Checkout the link below. Here is the direction, which help you to prepare <b>{recipeName}</b> in home.\"</blockquote>\r\n        <a href={`${sourceUrl}`} rel=\"noopener noreferrer\" target='_blank' className='check__link'>Check this link</a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(HowToCook);","import React from 'react';\r\nimport { IconContext } from 'react-icons';\r\nimport { FaCheckCircle } from 'react-icons/fa';\r\n\r\nimport './Snackbar.scss';\r\n\r\nconst Snackbar = ({ text }) => {\r\n  return(\r\n    <div className='snackbar'>\r\n      <span className='text'>{text}</span>\r\n      <span>\r\n        <IconContext.Provider value={{className: 'checkIcon'}}>\r\n          <FaCheckCircle />\r\n        </IconContext.Provider>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Snackbar;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport './RecipeDetails.scss';\r\n\r\nimport Button from '../Button/Button';\r\nimport Spinner from '../Spinner/Spinner';\r\nimport HowToCook from '../HowToCook/HowToCook';\r\nimport Snackbar from '../Snackbar/Snackbar';\r\n\r\nimport { selectRecipes } from '../../Redux/cart/cartSelector';\r\nimport { selectList } from '../../Redux/favourites/favouriteSelector';\r\nimport { recipePrice } from '../../utility/recipe';\r\nimport { addRecipe, removeRecipe } from '../../Redux/cart/cartAction';\r\nimport { unlikeRecipe, likeRecipe } from '../../Redux/favourites/favouriteAction';\r\nimport { hasRecipe } from '../../utility/cart';\r\nimport { isLiked } from '../../utility/favourites';\r\n\r\nconst RecipeDetails = ({ info, cartItems, favourites, addRecipe, removeRecipe, like, unlike }) => {\r\n  const [ showSnackbar, setShowSnackbar ] = useState(false);\r\n  const [ type, setType ] = useState('');\r\n\r\n  const addToCart = info => {\r\n    setShowSnackbar(true);\r\n    addRecipe(info);\r\n    setType('added to');\r\n\r\n    setTimeout(() => {\r\n      setShowSnackbar(false);\r\n    }, 2000)\r\n  };\r\n\r\n  const removeFromCart = info => {\r\n    setShowSnackbar(true);\r\n    removeRecipe(info);\r\n    setType('removed from');\r\n\r\n    setTimeout(() => {\r\n      setShowSnackbar(false);\r\n    }, 2000)\r\n  };\r\n\r\n  return(\r\n    <div>\r\n      {showSnackbar && <Snackbar text={`recipe ${type} wishlist`}/>}\r\n      {info ? <div className='recipeDetails'>\r\n        <div className='infoTitle'>\r\n          <h3>{info.title}</h3>\r\n          <p>Publisher: {info.publisher}</p>\r\n        </div>\r\n        <div className='imageBg' style={{backgroundImage: `url(${info.image_url})`}} />\r\n        <div className='btnContainer'>\r\n          <div className='price'>\r\n            <span>Cost: $ {recipePrice(info.recipe_id)}</span>\r\n          </div>\r\n          <div className='buttons'>\r\n            <span>\r\n              {isLiked(favourites, info) ? \r\n              <i className=\"fas fa-heart fa-2x red__heart\" onClick={() => unlike(info)}></i> :\r\n              <i className=\"far fa-heart fa-2x\" onClick={() => like(info)}></i>}\r\n            </span>\r\n            <span>\r\n              {hasRecipe(cartItems, info) ? \r\n              <Button title='remove from wishlist' click={() => removeFromCart(info)}>Unwishlist</Button>\r\n              : <Button title='add to wishlist' click={() => addToCart(info)}>Wishlist</Button>}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <HowToCook sourceUrl={info.source_url} recipeName={info.title}/>\r\n      </div> : <Spinner />}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  cartItems: selectRecipes,\r\n  favourites: selectList\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addRecipe: recipe => dispatch( addRecipe(recipe) ),\r\n  removeRecipe: recipe => dispatch( removeRecipe(recipe) ),\r\n  like: recipe => dispatch( likeRecipe(recipe) ),\r\n  unlike: recipe => dispatch( unlikeRecipe(recipe) )\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RecipeDetails);","import React, { Component, createRef } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport './RecipeInfo.scss';\r\nimport RecipeDetails from '../../components/RecipeDetails/RecipeDetails';\r\n\r\nclass RecipeInfo extends Component {\r\n  state = {\r\n    recipeInfo: null\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.node = createRef();\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.node.current.scrollIntoView({ behaviour: 'smooth' });\r\n    const id = this.props.match.params.recipeId;\r\n    const info = await axios.get(`https://forkify-api.herokuapp.com/api/get?rId=${id}`);\r\n    this.setState({ recipeInfo: info.data.recipe });\r\n  }\r\n\r\n  render() {\r\n    const { recipeInfo } = this.state;\r\n\r\n    return(\r\n      <div className='recipeInfo' ref={this.node}>\r\n        <RecipeDetails info={recipeInfo}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RecipeInfo;"],"sourceRoot":""}